/* By Default - Horizontal Axis (Main Axis)
                Vertical Axis   (Cross-Axis) */

* {
    box-sizing: border-box;
}

/* Parent container in Flexbox is called Flex */
/* Properties :- 
1. flex-direction
2. flex-wrap
3. flex-flow
4. justify-content      It will apply with repect to horizontal axis
5. align-items          It will apply with repect to vertical axis
6. align-content        It will handle the space between two rows
*/


.container {
    height: 400px;
    border: 2px solid green;

    display: flex;
    
    flex-direction: row;          /* by default the main axis in flexbox in horizontal axis, So that's why the box are in vertical direction */
    /* flex-direction: column; */
    /* flex-direction: row-reverse; */
    /* flex-direction: column-reverse; */


    /* Now if we squence our window then the elements shifts on next line so that its width get preserved */
    /* flex-wrap: wrap;        default value is nowrap */
    /* flex-wrap: nowrap; */
    /* flex-wrap: wrap-reverse; */

    /* flex-flow: row wrap; */      /* Shorthand notation */

    /* It will apply with repect to horizontal axis */
    /* justify-content: flex-start; */
    /* justify-content: end; */
    justify-content: center;
    /* justify-content: space-around; */
    /* justify-content: space-between; */
    /* justify-content: space-evenly; */
    
    /* It will apply with repect to vertical axis */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    align-items: center;
    /* align-items: stretch; */
    /* align-items: baseline;      Now all the different sizes boxes ahve the same baseline */

    /* gap: 10px;      By this we can add gap in between all the boxes */

    /* If we want to handle the space between two rows (if we squeze the window so that two rows appear) */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: center; */
    /* align-content: space-around; */
    /* align-content: space-between; */
    align-content: space-evenly;
}




/* Nested items in flexbox is called flex-items */
/* Properties :-
1. order            make the position of the element at the last
2. flex-grow        element will grow till all the remaining space gets covered in the row
3. flex-shrink      decide the shrinking speed of the box (more the value more the shrinking speed)
4. flex-basis       change the size of the box
5. flex             shorthand notation of above four
6. align-self       only one item align
*/

.box {
    border: 1px solid black;
    background-color: aquamarine;

    /* width: 100px;       overflow content get out of the box */
    flex-basis: 100px;      /* oveflow content get adjusted in the box */ 

    /* flex-grow: 1;   all the elments grow equally covering full width */
}

#box1 {
    order: 2;   /* By default the order of the element is zero */

    flex-shrink: 2;     /* to see it remove the flex wrap property. default value is one */
                        /* It will change the shrinking speed of the box */
}

#box3 {
    order: 8;

    flex-grow: 2;   /* By default the flex-grow is zero */

    align-self: flex-end ;
}

#box2 {
    order: 3;

    align-self: stretch;
}